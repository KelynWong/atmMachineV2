/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JPRG;

import java.io.IOException;
import java.sql.Timestamp;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Wong En Ting Kelyn Admission number: P1935800 Class: DIT/1B/01
 *
 */
public class Bank extends javax.swing.JFrame {

    private IO io = new IO();
    private int select1 = 0;
    private int select2 = 0;
    private BankAccount[] accounts;
    private double[] startingBal;
    private double[] intRate;
    Timer t = new Timer();

    /**
     * Creates new form Bank
     */
    public Bank() throws IOException {
        initComponents();

        jBalancebtn.setEnabled(false);
        jWithdrawbtn.setEnabled(false);
        jDepositbtn.setEnabled(false);
        jTransferbtn.setEnabled(false);
        jPanelWithdraw.setVisible(false);
        jPanelDeposit.setVisible(false);
        jPanelTransfer.setVisible(false);
        jHistorybtn.setEnabled(false);
        jDisplay.setEditable(false);
        jDisplay.setFocusable(false);
        jLogoutbtn.setEnabled(false);
        jDeleteHistorybtn.setEnabled(false);
        jAccountNo.requestFocus();
        createAccounts();

    }

    public void createAccounts() {

        try {
            accounts = io.readFile();
            startingBal = io.readStartingBaltextFile();
            intRate = io.readIntRatetextFile();
        } catch (Exception ex) {
            try {
                accounts = io.readFromtextFile();
                startingBal = io.readStartingBaltextFile();
                intRate = io.readIntRatetextFile();
            } catch (Exception e) {
                System.out.println(e);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton18 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDisplay = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonDone = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jBalancebtn = new javax.swing.JButton();
        jAccountNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jWithdrawbtn = new javax.swing.JButton();
        jDepositbtn = new javax.swing.JButton();
        jTransferbtn = new javax.swing.JButton();
        jHistorybtn = new javax.swing.JButton();
        jExitbtn = new javax.swing.JButton();
        jPanelWithdraw = new javax.swing.JPanel();
        jWithdraw50btn = new javax.swing.JRadioButton();
        jWithdraw100btn = new javax.swing.JRadioButton();
        jWithdraw200btn = new javax.swing.JRadioButton();
        jWithdraw500btn = new javax.swing.JRadioButton();
        jWithdraw1000btn = new javax.swing.JRadioButton();
        jWithdrawOtherbtn = new javax.swing.JRadioButton();
        jWithdrawAmountInput = new javax.swing.JTextField();
        jWithdrawCancelbtn = new javax.swing.JButton();
        jWithdrawDonebtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanelDeposit = new javax.swing.JPanel();
        jDeposit50btn = new javax.swing.JRadioButton();
        jDeposit100btn = new javax.swing.JRadioButton();
        jDeposit200btn = new javax.swing.JRadioButton();
        jDeposit500btn = new javax.swing.JRadioButton();
        jDeposit1000btn = new javax.swing.JRadioButton();
        jDepositOtherbtn = new javax.swing.JRadioButton();
        jDepositAmountInput = new javax.swing.JTextField();
        jDepositCancelbtn = new javax.swing.JButton();
        jDepositDonebtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanelTransfer = new javax.swing.JPanel();
        jTransfer50btn = new javax.swing.JRadioButton();
        jTransfer100btn = new javax.swing.JRadioButton();
        jTransfer200btn = new javax.swing.JRadioButton();
        jTransfer500btn = new javax.swing.JRadioButton();
        jTransfer1000btn = new javax.swing.JRadioButton();
        jTransferOtherbtn = new javax.swing.JRadioButton();
        jTransferAccountInput = new javax.swing.JTextField();
        jTransferCancelbtn = new javax.swing.JButton();
        jTransferDonebtn = new javax.swing.JButton();
        jTransferAmountInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPinNo = new javax.swing.JPasswordField();
        jLogoutbtn = new javax.swing.JButton();
        jDeleteHistorybtn = new javax.swing.JButton();
        jDecimalbtn = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );

        jButton18.setText("jButton18");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KWET Bank");

        jDisplay.setColumns(20);
        jDisplay.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jDisplay.setRows(5);
        jDisplay.setText("Welcome to KWET bank!\nEnter your account number and pin \nto proceed.");
        jScrollPane1.setViewportView(jDisplay);

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButtonDel.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDel.setText("x");
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButtonDone.setBackground(new java.awt.Color(51, 255, 0));
        jButtonDone.setText("o");
        jButtonDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDoneActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(255, 255, 51));
        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jBalancebtn.setBackground(new java.awt.Color(204, 204, 255));
        jBalancebtn.setText("Balance");
        jBalancebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalancebtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Account no.");

        jLabel2.setText("Pin no.");

        jWithdrawbtn.setBackground(new java.awt.Color(204, 204, 255));
        jWithdrawbtn.setText("Withdraw");
        jWithdrawbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdrawbtnActionPerformed(evt);
            }
        });

        jDepositbtn.setBackground(new java.awt.Color(204, 204, 255));
        jDepositbtn.setText("Deposit");
        jDepositbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDepositbtnActionPerformed(evt);
            }
        });

        jTransferbtn.setBackground(new java.awt.Color(204, 204, 255));
        jTransferbtn.setText("Transfer");
        jTransferbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransferbtnActionPerformed(evt);
            }
        });

        jHistorybtn.setBackground(new java.awt.Color(204, 204, 255));
        jHistorybtn.setText("History");
        jHistorybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHistorybtnActionPerformed(evt);
            }
        });

        jExitbtn.setBackground(new java.awt.Color(255, 0, 0));
        jExitbtn.setText("Exit");
        jExitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitbtnActionPerformed(evt);
            }
        });

        jPanelWithdraw.setBorder(javax.swing.BorderFactory.createTitledBorder("Withdraw"));

        buttonGroup1.add(jWithdraw50btn);
        jWithdraw50btn.setText("$50");
        jWithdraw50btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdraw50btnActionPerformed(evt);
            }
        });

        buttonGroup1.add(jWithdraw100btn);
        jWithdraw100btn.setText("$100");
        jWithdraw100btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdraw100btnActionPerformed(evt);
            }
        });

        buttonGroup1.add(jWithdraw200btn);
        jWithdraw200btn.setText("$200");
        jWithdraw200btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdraw200btnActionPerformed(evt);
            }
        });

        buttonGroup1.add(jWithdraw500btn);
        jWithdraw500btn.setText("$500");
        jWithdraw500btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdraw500btnActionPerformed(evt);
            }
        });

        buttonGroup1.add(jWithdraw1000btn);
        jWithdraw1000btn.setText("$1000");
        jWithdraw1000btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdraw1000btnActionPerformed(evt);
            }
        });

        buttonGroup1.add(jWithdrawOtherbtn);
        jWithdrawOtherbtn.setText("Other");
        jWithdrawOtherbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdrawOtherbtnActionPerformed(evt);
            }
        });

        jWithdrawCancelbtn.setBackground(new java.awt.Color(255, 0, 0));
        jWithdrawCancelbtn.setText("x");
        jWithdrawCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdrawCancelbtnActionPerformed(evt);
            }
        });

        jWithdrawDonebtn.setBackground(new java.awt.Color(102, 255, 0));
        jWithdrawDonebtn.setText("o");
        jWithdrawDonebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdrawDonebtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Amount");

        javax.swing.GroupLayout jPanelWithdrawLayout = new javax.swing.GroupLayout(jPanelWithdraw);
        jPanelWithdraw.setLayout(jPanelWithdrawLayout);
        jPanelWithdrawLayout.setHorizontalGroup(
            jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                            .addComponent(jWithdraw200btn)
                            .addGap(19, 19, 19)
                            .addComponent(jWithdrawAmountInput))
                        .addComponent(jWithdraw50btn)
                        .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                            .addComponent(jWithdraw100btn)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel5))
                        .addComponent(jWithdraw1000btn)
                        .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                            .addComponent(jWithdrawOtherbtn)
                            .addGap(15, 15, 15)
                            .addComponent(jWithdrawCancelbtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jWithdrawDonebtn)))
                    .addComponent(jWithdraw500btn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWithdrawLayout.setVerticalGroup(
            jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jWithdraw50btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jWithdraw100btn)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jWithdraw200btn)
                    .addComponent(jWithdrawAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jWithdraw500btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jWithdraw1000btn)
                .addGroup(jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jWithdrawCancelbtn)
                            .addComponent(jWithdrawDonebtn))
                        .addContainerGap())
                    .addGroup(jPanelWithdrawLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jWithdrawOtherbtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanelDeposit.setBorder(javax.swing.BorderFactory.createTitledBorder("Deposit"));

        buttonGroup2.add(jDeposit50btn);
        jDeposit50btn.setText("$50");
        jDeposit50btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeposit50btnActionPerformed(evt);
            }
        });

        buttonGroup2.add(jDeposit100btn);
        jDeposit100btn.setText("$100");
        jDeposit100btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeposit100btnActionPerformed(evt);
            }
        });

        buttonGroup2.add(jDeposit200btn);
        jDeposit200btn.setText("$200");
        jDeposit200btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeposit200btnActionPerformed(evt);
            }
        });

        buttonGroup2.add(jDeposit500btn);
        jDeposit500btn.setText("$500");
        jDeposit500btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeposit500btnActionPerformed(evt);
            }
        });

        buttonGroup2.add(jDeposit1000btn);
        jDeposit1000btn.setText("$1000");
        jDeposit1000btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeposit1000btnActionPerformed(evt);
            }
        });

        buttonGroup2.add(jDepositOtherbtn);
        jDepositOtherbtn.setText("Other");
        jDepositOtherbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDepositOtherbtnActionPerformed(evt);
            }
        });

        jDepositCancelbtn.setBackground(new java.awt.Color(255, 0, 0));
        jDepositCancelbtn.setText("x");
        jDepositCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDepositCancelbtnActionPerformed(evt);
            }
        });

        jDepositDonebtn.setBackground(new java.awt.Color(102, 255, 0));
        jDepositDonebtn.setText("o");
        jDepositDonebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDepositDonebtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Amount");

        javax.swing.GroupLayout jPanelDepositLayout = new javax.swing.GroupLayout(jPanelDeposit);
        jPanelDeposit.setLayout(jPanelDepositLayout);
        jPanelDepositLayout.setHorizontalGroup(
            jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDepositLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDeposit1000btn)
                    .addComponent(jDeposit500btn)
                    .addComponent(jDeposit50btn)
                    .addGroup(jPanelDepositLayout.createSequentialGroup()
                        .addComponent(jDepositOtherbtn)
                        .addGap(37, 37, 37)
                        .addComponent(jDepositCancelbtn)
                        .addGap(18, 18, 18)
                        .addComponent(jDepositDonebtn))
                    .addGroup(jPanelDepositLayout.createSequentialGroup()
                        .addGroup(jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDeposit200btn)
                            .addComponent(jDeposit100btn))
                        .addGap(25, 25, 25)
                        .addGroup(jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDepositLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jDepositAmountInput))))
                .addContainerGap())
        );
        jPanelDepositLayout.setVerticalGroup(
            jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDepositLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDeposit50btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDepositLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(jDepositAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelDepositLayout.createSequentialGroup()
                        .addComponent(jDeposit100btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDeposit200btn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDeposit500btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDeposit1000btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jDepositCancelbtn)
                        .addComponent(jDepositDonebtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDepositLayout.createSequentialGroup()
                        .addComponent(jDepositOtherbtn)
                        .addContainerGap())))
        );

        jPanelTransfer.setBorder(javax.swing.BorderFactory.createTitledBorder("Transfer Funds"));

        buttonGroup3.add(jTransfer50btn);
        jTransfer50btn.setText("$50");
        jTransfer50btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransfer50btnActionPerformed(evt);
            }
        });

        buttonGroup3.add(jTransfer100btn);
        jTransfer100btn.setText("$100");
        jTransfer100btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransfer100btnActionPerformed(evt);
            }
        });

        buttonGroup3.add(jTransfer200btn);
        jTransfer200btn.setText("$200");
        jTransfer200btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransfer200btnActionPerformed(evt);
            }
        });

        buttonGroup3.add(jTransfer500btn);
        jTransfer500btn.setText("$500");
        jTransfer500btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransfer500btnActionPerformed(evt);
            }
        });

        buttonGroup3.add(jTransfer1000btn);
        jTransfer1000btn.setText("$1000");
        jTransfer1000btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransfer1000btnActionPerformed(evt);
            }
        });

        buttonGroup3.add(jTransferOtherbtn);
        jTransferOtherbtn.setText("Other");
        jTransferOtherbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransferOtherbtnActionPerformed(evt);
            }
        });

        jTransferCancelbtn.setBackground(new java.awt.Color(255, 0, 0));
        jTransferCancelbtn.setText("x");
        jTransferCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransferCancelbtnActionPerformed(evt);
            }
        });

        jTransferDonebtn.setBackground(new java.awt.Color(102, 255, 0));
        jTransferDonebtn.setText("o");
        jTransferDonebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransferDonebtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Account no.");

        jLabel4.setText("Amount");

        javax.swing.GroupLayout jPanelTransferLayout = new javax.swing.GroupLayout(jPanelTransfer);
        jPanelTransfer.setLayout(jPanelTransferLayout);
        jPanelTransferLayout.setHorizontalGroup(
            jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTransferLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTransfer50btn)
                    .addComponent(jTransfer100btn)
                    .addComponent(jTransfer200btn))
                .addGap(25, 25, 25)
                .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTransferLayout.createSequentialGroup()
                        .addComponent(jTransferCancelbtn)
                        .addGap(18, 18, 18)
                        .addComponent(jTransferDonebtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTransferLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTransferAmountInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addComponent(jTransferAccountInput, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTransfer500btn)
                                .addComponent(jTransfer1000btn))
                            .addComponent(jTransferOtherbtn))
                        .addGap(24, 24, 24))))
        );
        jPanelTransferLayout.setVerticalGroup(
            jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTransferLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTransferLayout.createSequentialGroup()
                        .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTransfer500btn)
                            .addComponent(jTransfer50btn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransfer100btn)
                            .addComponent(jTransfer1000btn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTransferLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTransferAccountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(1, 1, 1)))
                .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTransfer200btn)
                    .addComponent(jTransferOtherbtn)
                    .addComponent(jTransferAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTransferCancelbtn)
                    .addComponent(jTransferDonebtn))
                .addGap(60, 60, 60))
        );

        jLogoutbtn.setBackground(new java.awt.Color(255, 153, 153));
        jLogoutbtn.setText("Log out");
        jLogoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogoutbtnActionPerformed(evt);
            }
        });

        jDeleteHistorybtn.setBackground(new java.awt.Color(255, 153, 153));
        jDeleteHistorybtn.setText("Delete transaction history");
        jDeleteHistorybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteHistorybtnActionPerformed(evt);
            }
        });

        jDecimalbtn.setText(".");
        jDecimalbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDecimalbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLogoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jDeleteHistorybtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDepositbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jWithdrawbtn)
                                    .addComponent(jTransferbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(21, 21, 21)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jAccountNo, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                            .addComponent(jPinNo)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButtonClear)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jDecimalbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton9))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButtonDel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton0)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButtonDone))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton3)))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jHistorybtn, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                                .addComponent(jExitbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jBalancebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelDeposit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jWithdrawbtn)
                                .addComponent(jBalancebtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jPinNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)
                                    .addComponent(jDepositbtn)
                                    .addComponent(jHistorybtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton4)
                                    .addComponent(jButton5)
                                    .addComponent(jButton6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton7)
                                    .addComponent(jButton8)
                                    .addComponent(jButton9)
                                    .addComponent(jTransferbtn)
                                    .addComponent(jExitbtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonDel)
                                        .addComponent(jButton0))
                                    .addComponent(jButtonDone))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonClear)
                            .addComponent(jDecimalbtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLogoutbtn)
                            .addComponent(jDeleteHistorybtn))))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanelTransfer.getAccessibleContext().setAccessibleName("Transfer");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "1");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "1");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "1");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "1");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "1");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "1");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "1");
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "2");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "2");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "2");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "2");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "2");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "2");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "2");
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "3");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "3");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "3");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "3");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "3");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "3");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "3");
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "4");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "4");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "4");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "4");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "4");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "4");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "4");
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "5");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "5");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "5");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "5");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "5");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "5");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "5");
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "6");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "6");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "6");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "6");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "6");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "6");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "6");
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "8");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "8");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "8");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "8");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "8");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "8");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "8");
                }
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "7");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "7");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "7");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "7");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "7");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "7");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "7");
                }
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "9");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "9");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "9");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "9");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "9");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "9");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "9");
                }
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to delete one character
        if (jPanelWithdraw.isShowing()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText().substring(0, jWithdrawAmountInput.getText().length() - 1));
        } else if (jPanelDeposit.isShowing()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText().substring(0, jDepositAmountInput.getText().length() - 1));
        } else if (jPanelTransfer.isShowing()) {
            if (jlength3 > 9) {
                if (jTransferOtherbtn.isSelected()) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText().substring(0, jTransferAmountInput.getText().length() - 1));
                }
            } else {
                jTransferAccountInput.setText(jTransferAccountInput.getText().substring(0, jTransferAccountInput.getText().length() - 1));
            }
        } else {
            if (jlength1 > 9) {
                if (jlength2.length == 0) {
                    jAccountNo.setText(jAccountNo.getText().substring(0, jAccountNo.getText().length() - 1));
                } else {
                    jPinNo.setText(jPinNo.getText().substring(0, jPinNo.getText().length() - 1));
                }
            } else {
                jAccountNo.setText(jAccountNo.getText().substring(0, jAccountNo.getText().length() - 1));
            }
        }
    }//GEN-LAST:event_jButtonDelActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + "0");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + "0");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + "0");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "0");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                    jDisplay.setText(jDisplay.getText() + "\nSelect the other button to key in amount!!");
                } else {
                    jTransferAccountInput.setText(jTransferAccountInput.getText() + "0");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jPinNo.setText(jPinNo.getText() + "0");
                    }
                } else {
                    jAccountNo.setText(jAccountNo.getText() + "0");
                }
            }
        }
    }//GEN-LAST:event_jButton0ActionPerformed

    private void jButtonDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDoneActionPerformed
        String accountNo, pin;
        char[] getPin;

        accountNo = jAccountNo.getText();
        getPin = jPinNo.getPassword();
        pin = String.copyValueOf(getPin);

        //Checking if account exists and if pin is correct
        for (int i = 0; i < accounts.length; i++) {
            if (accountNo.equals(accounts[i].getAccountNo())) {
                select1 = i;
                if (pin.equals(accounts[i].getPassword())) {
                    if (accounts[i].getType().equals("Savings Account")) {
                        jBalancebtn.setEnabled(true);
                        jWithdrawbtn.setEnabled(true);
                        jDepositbtn.setEnabled(true);
                        jTransferbtn.setEnabled(true);
                        jHistorybtn.setEnabled(true);
                        jLogoutbtn.setEnabled(true);
                        jDeleteHistorybtn.setEnabled(true);
                        jAccountNo.setText("");
                        jAccountNo.setEditable(false);
                        jPinNo.setText("");
                        jPinNo.setEditable(false);
                        jDisplay.setText(jDisplay.getText() + "\n\nWelcome " + accounts[i].getName());
                        jDisplay.setText(jDisplay.getText() + "\nThis is a Savings account");
                    } else {
                        jBalancebtn.setEnabled(true);
                        jWithdrawbtn.setEnabled(false);
                        jDepositbtn.setEnabled(false);
                        jTransferbtn.setEnabled(false);
                        jHistorybtn.setEnabled(true);
                        jLogoutbtn.setEnabled(true);
                        jDeleteHistorybtn.setEnabled(true);
                        jAccountNo.setText("");
                        jAccountNo.setEditable(false);
                        jPinNo.setText("");
                        jPinNo.setEditable(false);
                        jDisplay.setText(jDisplay.getText() + "\n\nWelcome " + accounts[i].getName());
                        jDisplay.setText(jDisplay.getText() + "\nThis is a Fixed Deposit account");
                    }
                    TimerTask tt = new TimerTask() {
                        @Override
                        public void run() {
                            accounts[select1].calculateBalanceIntRate(accounts[select1].getBalance(), intRate[select1]);
                            accounts[select1].setInterestEarned(accounts[select1].getBalance(), startingBal[select1]);
                        }
                    };
                    t.scheduleAtFixedRate(tt, 0, 5000);
                } else {
                    jDisplay.setText(jDisplay.getText() + "\n\nInvalid account number or pin!!");
                }
            }
        }
    }//GEN-LAST:event_jButtonDoneActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        //all textfields sets to empty and clears radiobutton selections
        jAccountNo.setText("");
        jPinNo.setText("");
        jTransferAccountInput.setText("");
        jTransferAmountInput.setText("");
        jWithdrawAmountInput.setText("");
        jDepositAmountInput.setText("");
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        buttonGroup3.clearSelection();
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jDepositbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDepositbtnActionPerformed
        //shows the deposit panel and hides other panels
        //clears any button selection
        //sets textfield to be empty
        jPanelDeposit.setVisible(true);
        jPanelTransfer.setVisible(false);
        jPanelWithdraw.setVisible(false);
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        buttonGroup3.clearSelection();
        jWithdrawAmountInput.setText("");
        jDepositAmountInput.setText("");
        jTransferAmountInput.setText("");
        jDisplay.setText(jDisplay.getText() + "\n\nPlease select the amount you would like to deposit.\nSelect the 'other' option to key in amount.");
    }//GEN-LAST:event_jDepositbtnActionPerformed

    private void jTransferbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransferbtnActionPerformed
        //shows the transfer panel and hides other panels
        //clears any button selection
        //sets textfield to be empty
        jPanelTransfer.setVisible(true);
        jPanelDeposit.setVisible(false);
        jPanelWithdraw.setVisible(false);
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        buttonGroup3.clearSelection();
        jWithdrawAmountInput.setText("");
        jDepositAmountInput.setText("");
        jTransferAmountInput.setText("");
        jDisplay.setText(jDisplay.getText() + "\n\nPlease enter the account no. you would like to transfer\nand select the amount you would like to transfer.\nSelect the 'other' option to key in amount.");
    }//GEN-LAST:event_jTransferbtnActionPerformed

    private void jDeposit50btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeposit50btnActionPerformed
        //set textfield to be 50 and make it not editable
        jDepositAmountInput.setText("50");
        jDepositAmountInput.setEditable(false);
    }//GEN-LAST:event_jDeposit50btnActionPerformed

    private void jExitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitbtnActionPerformed
        //saves account to file before exiting the program
        io.saveFile(accounts);
        System.exit(0);
    }//GEN-LAST:event_jExitbtnActionPerformed

    private void jWithdrawbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdrawbtnActionPerformed
        //shows the withdraw panel and hides other panels
        //clears any button selection
        //sets textfield to be empty
        jPanelWithdraw.setVisible(true);
        jPanelDeposit.setVisible(false);
        jPanelTransfer.setVisible(false);
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        buttonGroup3.clearSelection();
        jWithdrawAmountInput.setText("");
        jDepositAmountInput.setText("");
        jTransferAmountInput.setText("");
        jDisplay.setText("\n\nPlease select the amount you would like to withdraw.\nSelect the 'other' option to key in amount.");
    }//GEN-LAST:event_jWithdrawbtnActionPerformed

    private void jBalancebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalancebtnActionPerformed
        jDisplay.setText(jDisplay.getText() + "\n\nYour balance is: $" + String.format("%.2f", accounts[select1].getBalance()));
        jDisplay.setText(jDisplay.getText() + "\nTotal Interest earned: $" + String.format("%.2f", accounts[select1].getTotalInterest()));
        jDisplay.requestFocus();
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        buttonGroup3.clearSelection();
        jWithdrawAmountInput.setText("");
        jDepositAmountInput.setText("");
        jTransferAmountInput.setText("");
        jPanelWithdraw.hide();
        jPanelDeposit.hide();
        jPanelTransfer.hide();
    }//GEN-LAST:event_jBalancebtnActionPerformed

    private void jWithdraw50btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdraw50btnActionPerformed
        //set textfield to be 50 and make it not editable
        jWithdrawAmountInput.setText("50");
        jWithdrawAmountInput.setEditable(false);
    }//GEN-LAST:event_jWithdraw50btnActionPerformed

    private void jWithdraw100btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdraw100btnActionPerformed
        //set textfield to be 100 and make it not editable
        jWithdrawAmountInput.setText("100");
        jWithdrawAmountInput.setEditable(false);
    }//GEN-LAST:event_jWithdraw100btnActionPerformed

    private void jWithdraw200btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdraw200btnActionPerformed
        //set textfield to be 200 and make it not editable
        jWithdrawAmountInput.setText("200");
        jWithdrawAmountInput.setEditable(false);
    }//GEN-LAST:event_jWithdraw200btnActionPerformed

    private void jWithdraw500btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdraw500btnActionPerformed
        //set textfield to be 500 and make it not editable
        jWithdrawAmountInput.setText("500");
        jWithdrawAmountInput.setEditable(false);
    }//GEN-LAST:event_jWithdraw500btnActionPerformed

    private void jWithdraw1000btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdraw1000btnActionPerformed
        //set textfield to be 1000 and make it not editable
        jWithdrawAmountInput.setText("1000");
        jWithdrawAmountInput.setEditable(false);
    }//GEN-LAST:event_jWithdraw1000btnActionPerformed

    private void jWithdrawOtherbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdrawOtherbtnActionPerformed
        //set textfield to be empty and make it editable
        jWithdrawAmountInput.setText("");
        jWithdrawAmountInput.setEditable(true);
        jWithdrawAmountInput.requestFocus();
    }//GEN-LAST:event_jWithdrawOtherbtnActionPerformed

    private void jDeposit100btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeposit100btnActionPerformed
        //set textfield to be 100 and make it not editable
        jDepositAmountInput.setText("100");
        jDepositAmountInput.setEditable(false);
    }//GEN-LAST:event_jDeposit100btnActionPerformed

    private void jDeposit200btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeposit200btnActionPerformed
        //set textfield to be 200 and make it not editable
        jDepositAmountInput.setText("200");
        jDepositAmountInput.setEditable(false);
    }//GEN-LAST:event_jDeposit200btnActionPerformed

    private void jDeposit500btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeposit500btnActionPerformed
        //set textfield to be 500 and make it not editable
        jDepositAmountInput.setText("500");
        jDepositAmountInput.setEditable(false);
    }//GEN-LAST:event_jDeposit500btnActionPerformed

    private void jDeposit1000btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeposit1000btnActionPerformed
        //set textfield to be 1000 and make it not editable
        jDepositAmountInput.setText("1000");
        jDepositAmountInput.setEditable(false);
    }//GEN-LAST:event_jDeposit1000btnActionPerformed

    private void jDepositOtherbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDepositOtherbtnActionPerformed
        //set textfield to be empty and make it editable
        jDepositAmountInput.setText("");
        jDepositAmountInput.setEditable(true);
        jDepositAmountInput.requestFocus();
    }//GEN-LAST:event_jDepositOtherbtnActionPerformed

    private void jTransfer50btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransfer50btnActionPerformed
        //set textfield to be 50 and make it not editable
        jTransferAmountInput.setText("50");
        jTransferAmountInput.setEditable(false);
    }//GEN-LAST:event_jTransfer50btnActionPerformed

    private void jTransfer100btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransfer100btnActionPerformed
        //set textfield to be 100 and make it not editable
        jTransferAmountInput.setText("100");
        jTransferAmountInput.setEditable(false);
    }//GEN-LAST:event_jTransfer100btnActionPerformed

    private void jTransfer200btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransfer200btnActionPerformed
        //set textfield to be 200 and make it not editable
        jTransferAmountInput.setText("200");
        jTransferAmountInput.setEditable(false);
    }//GEN-LAST:event_jTransfer200btnActionPerformed

    private void jTransfer500btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransfer500btnActionPerformed
        //set textfield to be 500 and make it not editable
        jTransferAmountInput.setText("500");
        jTransferAmountInput.setEditable(false);
    }//GEN-LAST:event_jTransfer500btnActionPerformed

    private void jTransfer1000btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransfer1000btnActionPerformed
        //set textfield to be 1000 and make it not editable
        jTransferAmountInput.setText("1000");
        jTransferAmountInput.setEditable(false);
    }//GEN-LAST:event_jTransfer1000btnActionPerformed

    private void jTransferOtherbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransferOtherbtnActionPerformed
        //set textfield to be empty and make it editable
        jTransferAmountInput.setText("");
        jTransferAmountInput.setEditable(true);
        jTransferAmountInput.requestFocus();
    }//GEN-LAST:event_jTransferOtherbtnActionPerformed

    private void jWithdrawCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdrawCancelbtnActionPerformed
        //hides withdraw panel, set textfield empty and clear button selection
        jWithdrawAmountInput.setText("");
        buttonGroup1.clearSelection();
        jPanelWithdraw.setVisible(false);
    }//GEN-LAST:event_jWithdrawCancelbtnActionPerformed

    private void jDepositCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDepositCancelbtnActionPerformed
        //hides withdraw panel, set textfield empty and clear button selection
        jDepositAmountInput.setText("");
        buttonGroup2.clearSelection();
        jPanelDeposit.setVisible(false);
    }//GEN-LAST:event_jDepositCancelbtnActionPerformed

    private void jTransferCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransferCancelbtnActionPerformed
        //hides withdraw panel, set textfields empty and clear button selection
        jTransferAmountInput.setText("");
        jTransferAccountInput.setText("");
        buttonGroup3.clearSelection();
        jPanelTransfer.setVisible(false);
    }//GEN-LAST:event_jTransferCancelbtnActionPerformed

    private void jWithdrawDonebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdrawDonebtnActionPerformed
        double withdrawAmount;

        withdrawAmount = Double.parseDouble(jWithdrawAmountInput.getText());

        //check if amount that user withdraw is valid
        if (withdrawAmount <= 0 || withdrawAmount > accounts[select1].getBalance()) {
            jDisplay.setText(jDisplay.getText() + "\n\nInvalid amount! The amount to withdraw \nmust be greater than 0 and less \nthan $" + String.format("%.2f", accounts[select1].getBalance()));
        } else {
            accounts[select1].setBalance(accounts[select1].getBalance() - withdrawAmount);
            jDisplay.setText(jDisplay.getText() + "\n\nYou have withdrawn $" + String.format("%.2f", withdrawAmount));
            jDisplay.setText(jDisplay.getText() + "\nYour new balance is: $" + String.format("%.2f", accounts[select1].getBalance()));
            jWithdrawAmountInput.setText("");
            buttonGroup1.clearSelection();
            jPanelWithdraw.setVisible(false);
            //get the timestamp of when the user made the transaction
            Date date = new Date();
            long time = date.getTime();
            Timestamp ts = new Timestamp(time);
            //save the transaction to the history txt file
            io.saveHistory(ts, "Withdraw", withdrawAmount, accounts[select1].getBalance(), accounts[select1].getAccountNo());
        }
    }//GEN-LAST:event_jWithdrawDonebtnActionPerformed

    private void jDepositDonebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDepositDonebtnActionPerformed
        double depositAmount;

        depositAmount = Double.parseDouble(jDepositAmountInput.getText());

        if (depositAmount <= 0) {
            jDisplay.setText(jDisplay.getText() + "\n\nInvalid amount! The amount to deposit must be \ngreater than 0");
        } else {
            accounts[select1].setBalance(accounts[select1].getBalance() + depositAmount);
            jDisplay.setText(jDisplay.getText() + "\n\nYou have deposited $" + String.format("%.2f", depositAmount));
            jDisplay.setText(jDisplay.getText() + "\nYour new balance is: $" + String.format("%.2f", accounts[select1].getBalance()));
            jDepositAmountInput.setText("");
            buttonGroup2.clearSelection();
            jPanelDeposit.setVisible(false);
            //get the timestamp of when the user made the transaction
            Date date = new Date();
            long time = date.getTime();
            Timestamp ts = new Timestamp(time);
            //save the transaction to the history txt file
            io.saveHistory(ts, "Deposit", depositAmount, accounts[select1].getBalance(), accounts[select1].getAccountNo());
        }
    }//GEN-LAST:event_jDepositDonebtnActionPerformed

    private void jTransferDonebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransferDonebtnActionPerformed
        double transferAmount;
        String accountNo;
        boolean haveAccount = false;

        transferAmount = Double.parseDouble(jTransferAmountInput.getText());
        accountNo = jTransferAccountInput.getText();

        //check if account that user want to transfer to exists
        for (int i = 0; i < accounts.length; i++) {
            if (accountNo.equals(accounts[i].getAccountNo())) {
                select2 = i;
                haveAccount = true;
            }
        }

        //if account does not exists, display error msg
        if (!haveAccount) {
            jDisplay.setText(jDisplay.getText() + "\n\nInvalid account number!!");
        }

        if (accounts[select2].getAccountNo().equals(accounts[select1].getAccountNo())) {
            jDisplay.setText(jDisplay.getText() + "\n\nYou cannot transfer to you own account!!");
        } else {
            //check if account user transffering to is a fixed deposit account
            if (accounts[select2].getType().equals("Fixed Deposit")) {
                jDisplay.setText(jDisplay.getText() + "\n\nYou cannot transfer to " + accounts[select2].getAccountNo() + " \nas it is a fixed deposit account!");
                jTransferAccountInput.setText("");
                jTransferAccountInput.requestFocus();
                buttonGroup3.clearSelection();
            } else {
                //check if user amount that user is transferring is valid
                if (transferAmount <= 0 || transferAmount > accounts[select1].getBalance()) {
                    jDisplay.setText(jDisplay.getText() + "\n\nInvalid amount! The amount to transfer must be \ngreater than 0 and less than $" + String.format("%.2f", accounts[select1].getBalance()));
                } else {
                    accounts[select1].setBalance(accounts[select1].getBalance() - transferAmount);
                    accounts[select2].setBalance(accounts[select2].getBalance() + transferAmount);
                    jDisplay.setText(jDisplay.getText() + "\n\nYou have transfered $" + String.format("%.2f", transferAmount) + " to " + accounts[select2].getAccountNo());
                    jDisplay.setText(jDisplay.getText() + "\nYour new balance is: $" + String.format("%.2f", accounts[select1].getBalance()));
                    jWithdrawAmountInput.setText("");
                    jTransferAccountInput.setText("");
                    buttonGroup3.clearSelection();
                    jPanelTransfer.setVisible(false);
                    //get the timestamp of when the user made the transaction
                    Date date = new Date();
                    long time = date.getTime();
                    Timestamp ts = new Timestamp(time);
                    //save the transaction to the history txt file
                    io.saveHistory(ts, "Transfer", transferAmount, accounts[select1].getBalance(), accounts[select1].getAccountNo());
                    io.saveHistory(ts, "Transfer", transferAmount, accounts[select2].getBalance(), accounts[select2].getAccountNo());
                }
            }
        }
    }//GEN-LAST:event_jTransferDonebtnActionPerformed

    private void jHistorybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHistorybtnActionPerformed
        //getting the history file
        try {
            String history = io.readHistory(accounts[select1].getAccountNo());
            jDisplay.setText(jDisplay.getText() + "\n\nDate\tTime\tTransaction\tAmount\tBalance");
            jDisplay.setText(jDisplay.getText() + "\n" + history);
        } catch (IOException ex) {
            System.out.println("History not found");
        }
    }//GEN-LAST:event_jHistorybtnActionPerformed

    private void jLogoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogoutbtnActionPerformed
        //save to file and clear everything
        io.saveFile(accounts);
        jBalancebtn.setEnabled(false);
        jWithdrawbtn.setEnabled(false);
        jDepositbtn.setEnabled(false);
        jTransferbtn.setEnabled(false);
        jLogoutbtn.setEnabled(false);
        jHistorybtn.setEnabled(false);
        jDeleteHistorybtn.setEnabled(false);
        jPanelWithdraw.setVisible(false);
        jPanelDeposit.setVisible(false);
        jPanelTransfer.setVisible(false);
        jDisplay.setEditable(false);
        jDisplay.setFocusable(false);
        jAccountNo.requestFocus();
        jPanelWithdraw.hide();
        jPanelDeposit.hide();
        jPanelTransfer.hide();
        jDisplay.setText(jDisplay.getText() + "\n\nYou have logged out!!");
    }//GEN-LAST:event_jLogoutbtnActionPerformed

    private void jDeleteHistorybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteHistorybtnActionPerformed
        //deletes the history file
        if (io.deleteHistory(accounts[select1].getAccountNo())) {
            jDisplay.setText(jDisplay.getText() + "\n\nTransaction history deleted.");
        } else {
            jDisplay.setText(jDisplay.getText() + "\n\nThere is no transaction history to delete!!");
        }
    }//GEN-LAST:event_jDeleteHistorybtnActionPerformed

    private void jDecimalbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDecimalbtnActionPerformed
        int jlength1 = jAccountNo.getText().length();
        char[] jlength2 = jPinNo.getPassword();
        int jlength3 = jTransferAccountInput.getText().length();

        //Checking which jtextfield to input
        if (jWithdrawOtherbtn.isSelected()) {
            jWithdrawAmountInput.setText(jWithdrawAmountInput.getText() + ".");
        } else if (jDepositOtherbtn.isSelected()) {
            jDepositAmountInput.setText(jDepositAmountInput.getText() + ".");
        } else if (jPanelTransfer.isShowing()) {
            if (jTransferOtherbtn.isSelected()) {
                if (jlength3 > 9) {
                    jTransferAmountInput.setText(jTransferAmountInput.getText() + ".");
                } else {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot have decimals!");
                }
            } else {
                if (jlength3 > 9) {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot exceed 10 digits!");
                } else {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot have decimals!");
                }
            }
        } else {
            if (jWithdrawOtherbtn.isSelected() == false && jPanelWithdraw.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jDepositOtherbtn.isSelected() == false && jPanelDeposit.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nSelect the other button to key in amount!!");
            } else if (jTransferOtherbtn.isSelected() == false && jPanelTransfer.isShowing() == true) {
                jDisplay.setText(jDisplay.getText() + "\n\nEnter account no. first!!");
            } else {
                if (jlength1 > 9) {
                    if (jlength2.length > 5) {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin cannot exceed 6-digits!!");
                    } else {
                        jDisplay.setText(jDisplay.getText() + "\n\nPin number cannot have decimals!");
                    }
                } else {
                    jDisplay.setText(jDisplay.getText() + "\n\nAccount number cannot have decimals!");
                }
            }
        }
    }//GEN-LAST:event_jDecimalbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Bank().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Bank.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField jAccountNo;
    private javax.swing.JButton jBalancebtn;
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonDone;
    private javax.swing.JButton jDecimalbtn;
    private javax.swing.JButton jDeleteHistorybtn;
    private javax.swing.JRadioButton jDeposit1000btn;
    private javax.swing.JRadioButton jDeposit100btn;
    private javax.swing.JRadioButton jDeposit200btn;
    private javax.swing.JRadioButton jDeposit500btn;
    private javax.swing.JRadioButton jDeposit50btn;
    private javax.swing.JTextField jDepositAmountInput;
    private javax.swing.JButton jDepositCancelbtn;
    private javax.swing.JButton jDepositDonebtn;
    private javax.swing.JRadioButton jDepositOtherbtn;
    private javax.swing.JButton jDepositbtn;
    private javax.swing.JTextArea jDisplay;
    private javax.swing.JButton jExitbtn;
    private javax.swing.JButton jHistorybtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jLogoutbtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDeposit;
    private javax.swing.JPanel jPanelTransfer;
    private javax.swing.JPanel jPanelWithdraw;
    private javax.swing.JPasswordField jPinNo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jTransfer1000btn;
    private javax.swing.JRadioButton jTransfer100btn;
    private javax.swing.JRadioButton jTransfer200btn;
    private javax.swing.JRadioButton jTransfer500btn;
    private javax.swing.JRadioButton jTransfer50btn;
    private javax.swing.JTextField jTransferAccountInput;
    private javax.swing.JTextField jTransferAmountInput;
    private javax.swing.JButton jTransferCancelbtn;
    private javax.swing.JButton jTransferDonebtn;
    private javax.swing.JRadioButton jTransferOtherbtn;
    private javax.swing.JButton jTransferbtn;
    private javax.swing.JRadioButton jWithdraw1000btn;
    private javax.swing.JRadioButton jWithdraw100btn;
    private javax.swing.JRadioButton jWithdraw200btn;
    private javax.swing.JRadioButton jWithdraw500btn;
    private javax.swing.JRadioButton jWithdraw50btn;
    private javax.swing.JTextField jWithdrawAmountInput;
    private javax.swing.JButton jWithdrawCancelbtn;
    private javax.swing.JButton jWithdrawDonebtn;
    private javax.swing.JRadioButton jWithdrawOtherbtn;
    private javax.swing.JButton jWithdrawbtn;
    // End of variables declaration//GEN-END:variables
}
